CAPI=2:
name: cr1901:efbutils:ufm_reader:0.0.1
description: MachXO2/3 User Flash Memory reader.

filesets:
  base: &base
    file_type: verilogSource

  demo:
    <<: *base
    files:
      - ufm_reader/data/init.mem:
          file_type: user
          # Prior art: https://github.com/fusesoc/fusesoc-cores/blob/0d296c87a83a5d1d65b219ca0cb6d49d420c91e5/SD-card-controller/SD-card-controller-0-r3.core#L51
          copyto: init.mem
      - "tool_diamond ? (ufm_reader/scripts/gen_JEDEC.tcl)":
          file_type: user
          copyto: gen_JEDEC.tcl
      - "tool_diamond ? (ufm_reader/scripts/cp_outputs.tcl)":
          file_type: user
          copyto: cp_outputs.tcl

  page_tb:
    files:
      - ufm_reader/tb/page_tb.v
    file_type: verilogSource

  lcmxo2_7000he_b_evn:
    files:
      - ufm_reader/data/lcmxo2_7000he_b_evn.lpf:
          file_type: LPF

  tinyfpga_ax:
    files:
      - ufm_reader/data/tinyfpga_ax.lpf:
          file_type: LPF

  step_mxo2:
    files:
      - ufm_reader/data/step_mxo2.lpf:
          file_type: LPF

targets:
  default: &default
    filesets: [base, demo]
    toplevel: top
    parameters:
      - osch_freq=24.18
      - init_mem=init.mem
      - zero_mem=false
      - start_offset=32672 # 2042*16
      - size=64
      - device=7000L
    generate: []

  sim_page:
    filesets: [base, page_tb]
    toplevel: top
    default_tool: icarus
    generate: [sim_uart, page_buffer]

  lcmxo2_7000he_b_evn:
    <<: *default
    filesets_append: [lcmxo2_7000he_b_evn]
    default_tool: diamond
    generate_append: [demo_lcmxo2_7000he_b_evn]
    flags:
      sram: false # Do SRAM programming.
    hooks:
      post_build: ["tool_diamond ? (gen_jedec)", "tool_diamond ? (cp_outputs)"]
      post_run: ["tool_diamond ? (sram ? (ofl_evn_sram))", "tool_diamond ? (!sram ? (ofl_evn))"]
    tools:
      diamond:
        part: LCMXO2-7000HE-4TG144C

  tinyfpga_ax:
    <<: *default
    parameters_append:
      - start_offset=8112
      - device=1200L    
    filesets_append: [tinyfpga_ax]
    default_tool: diamond
    generate: [basic_uart]
    flags:
      sram: false # Do SRAM programming.
    hooks:
      post_build: ["tool_diamond ? (gen_jedec)", "tool_diamond ? (cp_outputs)"]
    tools:
      diamond:
        part: LCMXO2-1200HC-4SG32C

  step_mxo2:
    <<: *default
    parameters_append:
      - start_offset=12208
      - device=4000L    
    filesets_append: [step_mxo2]
    default_tool: diamond
    generate: [basic_uart]
    flags:
      sram: false # Do SRAM programming.
    hooks:
      post_build: ["tool_diamond ? (gen_jedec)", "tool_diamond ? (cp_outputs)"]
    tools:
      diamond:
        part: LCMXO2-4000HC-4MG132C

generate:
  basic_uart: &basic_uart
    generator: amaranth_uart_gen
    parameters:
      divisor: 1259 # 9600 at 12.09 MHz

  sim_uart:
    <<: *basic_uart
    parameters:
      divisor: 21 # 576000 at 12.09 MHz

  demo_lcmxo2_7000he_b_evn:
    generator: demo_gen
    parameters:
      num_leds: 8
      efb_config: { dev_density: 7000L, efb_wb_clk_freq: 24.18 }
      # Page granularity is temporary until I have a good opportunity to change
      # it after things are working on the Amaranth side.
      ufm_config: { init_mem: init.mem, start_page: 2042, num_pages: 4, zero_mem: false}

parameters:
  osch_freq:
    datatype: str
    description: |
        OSCH frequency string, twice the UART clock.
        
        (Valid values are: 2.08, 2.15, 2.22, 2.29, 2.38, 2.46, 2.56, 2.66, 2.77, 2.89,
        3.02, 3.17, 3.33, 3.50, 3.69, 3.91, 4.16, 4.29, 4.43, 4.59,
        4.75, 4.93, 5.12, 5.32, 5.54, 5.78, 6.05, 6.33, 6.65, 7.00,
        7.39, 7.82, 8.31, 8.58, 8.87, 9.17, 9.50, 9.85, 10.23, 10.64,
        11.08, 11.57, 12.09, 12.67, 13.30, 14.00, 14.78, 15.65, 15.65, 16.63,
        17.73, 19.00, 20.46, 22.17, 24.18, 26.60, 29.56, 33.25, 38.00, 44.33,
        53.20, 66.50, 88.67, and 133.00)
    paramtype: vlogparam

  init_mem:
    datatype: file
    default: init.mem
    description: |
        User Flash Memory initialization file location. Relative paths are
        converted to absolute; the default value of "init.mem" is an exception
        due to FuseSoC quirks.
        
        Do not wrap in quotes- this may cause Diamond
        to emit a JEDEC file which initializes UFM to all zeroes.
    paramtype: vlogparam

  zero_mem:
    datatype: bool
    default: false
    description: |
        Initialize UFM to all zeros. init_mem, start_offset, and size are
        ignored if this parameter is set to "true".
    paramtype: vlogparam

  start_offset:
    datatype: int
    default: 32672 # 2042*16
    description: |
      Byte offset at which to start reading the UFM. Ignored if zero_mem
      is "true".
    paramtype: vlogparam

  size:
    datatype: int
    default: 64
    description: |
      Number of bytes of the UFM starting from start_offset to read. Typically
      set to the size of init_mem. Ignored if zero_mem is "true".
    paramtype: vlogparam

  device:
    datatype: str
    default: 7000L
    description: |
      Current device. Internal parameter that works around FuseSoC quirks.
      Should not be set by the user.
    paramtype: vlogparam

scripts:
  gen_jedec:
    cmd: [pnmainc, gen_JEDEC.tcl]
    filesets: [demo]

  cp_outputs:
    cmd: [pnmainc, cp_outputs.tcl, cr1901_efbutils_ufm_reader_0_0_1]

  ofl_evn:
    cmd: [openFPGALoader, -b, machXO2EVN, cr1901_efbutils_ufm_reader_0_0_1.jed]

  ofl_evn_sram:
    cmd: [openFPGALoader, -b, machXO2EVN, cr1901_efbutils_ufm_reader_0_0_1.bit]

generators:
  amaranth_uart_gen:
    interpreter: python3
    command: gen.py
    description: |
      Generate a simple UART with configurable divisor. For a
      given clock rate and desired baud rate, the `divisor` parameter is
      calculated by: int(clk_rate // baud_rate).

      The generated core ports are:
      rx, tx_ack, tx_rdy, tx_data, rx_ack, rx_rdy, rx_data, clk, rst, tx.

      parameters:
        divisor (int): Divisor used to set baud rate. Controls how
        many clock cycles to wait before incrementing internal timers.

  page_buffer_gen:
    interpreter: python3
    command: gen.py
    description: |
      Generate the page_buffer Amaranth module into Verilog.

  reader_gen:
    interpreter: python3
    command: gen.py
    description: |
      Generate the ufm_reader Amaranth module into Verilog.

  efb_gen:
    interpreter: python3
    command: gen.py
    description: |
      Generate an EFB module using an Amaranth `Instance`. YAML parameters
      are converted to Python dictionaries to configure the IP.
      
      parameters:
        efb_config: |
          YAML dictionary to generally configure the EFB. Must not
          be `null` if using the EFB. Consists of:

            dev_density: Current device
            efb_wb_clk_freq: Clock frequency of Wishbone bus (probably OSCH freq).

        ufm_config: |
          YAML dictionary to configure the UFM. Enables the UFM if not
          `null`. Consists of:
            
            init_mem: Filename of data to load into UFM.
            start_page: First page in UFM to use.
            num_pages: Number of pages in UFM to use, starting at `start_page`.
            zero_mem: Initialize UFM to all zeros. `init_mem`, `start_offset`,
              and `num_pages` are ignored if this parameter is set to `true`.

  demo_gen:
    interpreter: python3
    command: gen.py
    description: |
      Generate a demo for MachXO2 boards that programs the UFM via JTAG and
      prints the string to a serial port.
      
      parameters:
        num_leds: Number of LEDs to use for showing signal values.
        efb_config: Same as `efb_config` parameter in `efb_gen`.
        `efb_wb_clk_freq` must be OSCH frequency, which is twice the UART clock.
        
        (Valid values are: 2.08, 2.15, 2.22, 2.29, 2.38, 2.46, 2.56, 2.66, 2.77, 2.89,
        3.02, 3.17, 3.33, 3.50, 3.69, 3.91, 4.16, 4.29, 4.43, 4.59,
        4.75, 4.93, 5.12, 5.32, 5.54, 5.78, 6.05, 6.33, 6.65, 7.00,
        7.39, 7.82, 8.31, 8.58, 8.87, 9.17, 9.50, 9.85, 10.23, 10.64,
        11.08, 11.57, 12.09, 12.67, 13.30, 14.00, 14.78, 15.65, 15.65, 16.63,
        17.73, 19.00, 20.46, 22.17, 24.18, 26.60, 29.56, 33.25, 38.00, 44.33,
        53.20, 66.50, 88.67, and 133.00)
        ufm_config: Same as `ufm_config` parameter in `efb_gen`.
