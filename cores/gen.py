import importlib
from pathlib import Path
import sys

from fusesoc.utils import yaml_fread

# Provide path to actual efbutils module for convenience.
sys.path += [str(Path(__file__).resolve().parent.parent)]

generator_to_module_map = {
    "demo_lcmxo2_7000he_b_evn": "efbutils.gen.ufm.demo",
    "page_buffer": "efbutils.gen.page_buffer"
}


if __name__ == "__main__":
    data = yaml_fread(sys.argv[1])
    vlnv = data.get("vlnv")
    _vendor, _lib, name, _version = vlnv.split(":")[:]
    # FuseSoC limitation... all fusesoc cores generated by efbutils have the
    # same entry-point. The generate section of your core must have a key
    # equal to a key in the generator_to_module map to invoke a generator.
    name = name.split("-")[-1]

    try:
        mod_name = generator_to_module_map[name]
    except KeyError:
        valid_gen_keys = (k[2] for k in generator_to_module_map.keys())
        valid_keys_str = ",".join(valid_gen_keys)
        raise ValueError("Bad key in generate section in fusesoc core file. Must be one of: {}. Got {}".format(valid_keys_str, name))  # noqa: E501

    gen_mod = importlib.import_module(generator_to_module_map[name])  # noqa: E501
    gen_mod.main(data)
